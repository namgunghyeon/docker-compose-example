global
  log 127.0.0.1 local0
  log 127.0.0.1 local1 notice

defaults REDIS
mode tcp
timeout connect 4s
timeout server 15s
timeout client 15s
# timeout tunnel 365d

frontend front_redis_master1
 bind *:5000 name redis                 #5000번 포트에 대한 bind 정보입니다.
 default_backend back_redis_master1     #5000번 포트로 신호가 들어오면 backend를 실행

backend back_redis_master1
 option tcp-check                       #tcp-check를 통해 접근가능한 서버 필터링
 tcp-check send PING\r\n                #PING을 날려 신호를 점검합니다.
 tcp-check expect string +PONG          #PONG이라는 응답이 왔는지?
 tcp-check send info\ replication\r\n   #info replication 명령을 날려 Redis에 대한 정보를 받아옵니다.
 tcp-check expect string role:master    #role이 master인지 확인 합니다.

 tcp-check send QUIT\r\n                #QUIT 명령을 전송
 tcp-check expect string +OK
 server redis1 10.0.0.2:7000 check inter 1s  #1초 단위로 해당 ip의 port로 체크합니다.
 server redis2 10.0.0.3:7001 check inter 1s  #1초 단위로 해당 ip의 port로 체크합니다.
 server redis3 10.0.0.4:7002 check inter 1s  #1초 단위로 해당 ip의 port로 체크합니다.
 server redis4 10.0.0.5:7003 check inter 1s  #1초 단위로 해당 ip의 port로 체크합니다.
 server redis5 10.0.0.6:7004 check inter 1s  #1초 단위로 해당 ip의 port로 체크합니다.
 server redis6 10.0.0.7:7005 check inter 1s  #1초 단위로 해당 ip의 port로 체크합니다.


frontend front_redis_slave1
bind *:5001 name redis                #5001번 포트에 대한 bind 정보입니다.
default_backend back_redis_slave1

backend back_redis_slave1
 balance roundrobin                   #라운드 로빈 방식으로 분배
 option tcp-check
 tcp-check send PING\r\n
 tcp-check expect string +PONG
 tcp-check send info\ replication\r\n
 tcp-check expect string role:slave   #role key가 slave인지 확인 합니다.
 tcp-check send QUIT\r\n
 tcp-check expect string +OK
 server redis1 10.0.0.2:7000 check inter 1s  #1초 단위로 해당 ip의 port로 체크합니다.
 server redis2 10.0.0.3:7001 check inter 1s  #1초 단위로 해당 ip의 port로 체크합니다.
 server redis3 10.0.0.4:7002 check inter 1s  #1초 단위로 해당 ip의 port로 체크합니다.
 server redis4 10.0.0.5:7003 check inter 1s  #1초 단위로 해당 ip의 port로 체크합니다.
 server redis5 10.0.0.6:7004 check inter 1s  #1초 단위로 해당 ip의 port로 체크합니다.
 server redis6 10.0.0.7:7005 check inter 1s  #1초 단위로 해당 ip의 port로 체크합니다.

#Listen on all IP's on port 9000 //9000 포트로 접근 시, Web Console에 진입할 수 있습니다. 
listen stats
   bind 0.0.0.0:9000
   mode http
   balance
   timeout client 5000
   timeout connect 4000
   timeout server 30000

   #This is the virtual URL to access the stats page
   stats uri /haproxy_stats //URL주소는 ip:9000/haproxy_stats입니다.
   #Authentication realm. This can be set to anything. Escape space characters with a backslash.
   stats realm HAProxy\ Statistics

   #The user/pass you want to use. Change this password!
   stats auth admin:1234 #Web Console에 접근하는 계정/암호 설정

   #This allows you to take down and bring up back end servers.
   #This will produce an error on older versions of HAProxy.
   stats admin if TRUE